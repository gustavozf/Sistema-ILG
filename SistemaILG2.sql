CREATE DATABASE IF NOT EXISTS SISTEMA_ILG2;
USE SISTEMA_ILG2;

CREATE TABLE IF NOT EXISTS ALUNO(
	ACPF VARCHAR(11),
    ARG VARCHAR(9),
    ANOME VARCHAR(30),
    ASOBRENOME VARCHAR(30),
    ASEXO CHAR,
    ATELEFONE VARCHAR(20),
    ADATA_NASC VARCHAR(8),
    POS_UEM INT,
    PRIMARY KEY(ACPF)
);

CREATE TABLE IF NOT EXISTS HAB_INGR(
	ANO INT,
	HABILITADO BOOLEAN DEFAULT 0,
    PRIMARY KEY (ANO)
);

INSERT INTO HAB_INGR VALUES (2017, 0);

CREATE TABLE IF NOT EXISTS SALAS(
	SCOD_CURSO INT NOT NULL,
    SCOD_TURMA INT NOT NULL,
    SNUM_INSCRICAO INT NOT NULL,
    SCPF VARCHAR(11),
    PROVA1 FLOAT,
    PROVA_AUX1 FLOAT,
    PROVA2 FLOAT,
    PROVA_AUX2 FLOAT,
    APROVADO BOOLEAN DEFAULT 0,
    MEDIA FLOAT,
    FALTAS INT DEFAULT 0, #FALTAS DOS ALUNOS
    PRIMARY KEY(SNUM_INSCRICAO)
);

CREATE TABLE IF NOT EXISTS FUNCIONARIO(
	FCPF VARCHAR(11),
    FRG VARCHAR(9),
    FNOME VARCHAR(30),
    FSOBRENOME VARCHAR(30),
    FSEXO CHAR,
    ID_SISTEMA VARCHAR(20),
    PASS_SISTEMA VARCHAR(20),
    FTELEFONE VARCHAR(20),
    FDATA_NASC VARCHAR(8),
	TIPO_ACESSO INT NOT NULL, #1 = SELECAO, 2=PROFESSOR
    PRIMARY KEY (FCPF)
);

CREATE TABLE IF NOT EXISTS INGRESSANTE(
	ICPF VARCHAR(11),
    IRG VARCHAR(9),
    INOME VARCHAR(30),
    ISOBRENOME VARCHAR(30),
    ISEXO CHAR,
    ITELEFONE VARCHAR(20),
    IDATA_NASC VARCHAR(8),
    POS_UEM INT,
    MEDIA FLOAT DEFAULT 0.00,
    SIT_ENTREGA BOOLEAN DEFAULT 0,
    PRIMARY KEY (ICPF)
);

CREATE TABLE IF NOT EXISTS POSICAO_UEM(
	NUM_FORM INT,
    DESCRICAO VARCHAR(100),
    DESCONTO FLOAT,
    PRIMARY KEY (NUM_FORM)
);

CREATE TABLE IF NOT EXISTS INGRESSO(
	NUM_INSCRICAO INT NOT NULL AUTO_INCREMENT,
    INCPF VARCHAR(11),
    INCOD_CURSO INT NOT NULL,
    INCOD_TURMA INT NOT NULL,
	SIT_PAGAMENTO BOOLEAN DEFAULT 0, #TEM QUE FAZER UM PAGAMENTO PARA CADA TURMA DISPUTADA
	SIT_ACEITACAO BOOLEAN DEFAULT 0, #AQUI, POIS O INGRESSANTE PODE TER MAIS DE UMA ACEITACAO
    PRIMARY KEY (NUM_INSCRICAO)
);

CREATE TABLE IF NOT EXISTS ENDERECO(
	ECPF VARCHAR(11),
    LOGRADOURO VARCHAR(30),
    NUMERO INT NOT NULL,
    COMPLEMENTO VARCHAR(20),
    CEP VARCHAR(8),
    PRIMARY KEY (ECPF)
);--

CREATE TABLE IF NOT EXISTS CURSO(
	NOME_CURSO VARCHAR(20),
    PRECO FLOAT,
    CARGA_HORARIO FLOAT,
    COD_CURSO INT NOT NULL,
	PRIMARY KEY (COD_CURSO)
);

CREATE TABLE IF NOT EXISTS TURMA(
	COD_TURMA INT NOT NULL,
    HORARIO VARCHAR(5),
    PROFESSOR VARCHAR(30),
	CPF_PROFESSOR VARCHAR(11), #PARA ENCONTRAR AS TURMAS QUE O PROF MINISTRA
    TCOD_CURSO INT NOT NULL,
    NUM_VAGAS INT NOT NULL,
	DESCRICAO VARCHAR(100), #PARA INFORMAR OS DIAS DA SEMANA
    PRIMARY KEY (COD_TURMA)
);

CREATE TABLE IF NOT EXISTS DISPUTA(
	DNUM_INSCRICAO INT NOT NULL,
    DCOD_CURSO INT NOT NULL,
    DCOD_TURMA INT NOT NULL,
    POSICAO INT,
    MEDIA FLOAT,
    PRIMARY KEY (DNUM_INSCRICAO)
);

#CREATE TABLE IF NOT EXISTS RELACAO(
#	RCPF VARCHAR(11),
#    RID INT NOT NULL,
#    RCOD_CURSO INT NOT NULL,
#    RCOD_TURMA INT NOT NULL,
#    PRIMARY KEY (RID)
#);

ALTER TABLE ALUNO
ADD FOREIGN KEY (ACPF) REFERENCES INGRESSANTE(ICPF);

#RELACAO
#ALTER TABLE RELACAO
#ADD FOREIGN KEY (RCPF) REFERENCES ALUNO(ACPF);

#ALTER TABLE RELACAO
#ADD FOREIGN KEY (RCOD_CURSO) REFERENCES CURSO(COD_CURSO);

#ALTER TABLE RELACAO
#ADD FOREIGN KEY (RCOD_TURMA) REFERENCES TURMA(COD_TURMA);

#SALAS
ALTER TABLE SALAS
ADD FOREIGN KEY (SCOD_TURMA) REFERENCES TURMA(COD_TURMA);

ALTER TABLE SALAS
ADD FOREIGN KEY (SCOD_CURSO) REFERENCES CURSO(COD_CURSO);

#INGRESSO
ALTER TABLE INGRESSO
ADD FOREIGN KEY(INCPF) REFERENCES INGRESSANTE(ICPF);

ALTER TABLE INGRESSO
ADD FOREIGN KEY(INCOD_CURSO) REFERENCES CURSO(COD_CURSO);

ALTER TABLE INGRESSO
ADD FOREIGN KEY(INCOD_TURMA) REFERENCES TURMA(COD_TURMA);

ALTER TABLE ENDERECO
ADD FOREIGN KEY(ECPF) REFERENCES INGRESSANTE(ICPF);

ALTER TABLE TURMA
ADD FOREIGN KEY(TCOD_CURSO) REFERENCES CURSO(COD_CURSO);

ALTER TABLE DISPUTA
ADD FOREIGN KEY(DNUM_INSCRICAO) REFERENCES INGRESSO(NUM_INSCRICAO);

ALTER TABLE DISPUTA
ADD FOREIGN KEY(DCOD_CURSO) REFERENCES CURSO(COD_CURSO);

ALTER TABLE DISPUTA
ADD FOREIGN KEY(DCOD_TURMA) REFERENCES TURMA(COD_TURMA);

ALTER TABLE INGRESSANTE
ADD FOREIGN KEY (POS_UEM) REFERENCES POSICAO_UEM (NUM_FORM);

ALTER TABLE ALUNO
ADD FOREIGN KEY (POS_UEM) REFERENCES POSICAO_UEM (NUM_FORM);

ALTER TABLE ENDERECO
ADD FOREIGN KEY (ECPF) REFERENCES ALUNO(ACPF);

INSERT INTO POSICAO_UEM VALUES(0,'Não Vinculado à UEM', 0.00);
INSERT INTO POSICAO_UEM VALUES(1,'Servidor da UEM matriculado em curso de pós-graduação', 0.55);
INSERT INTO POSICAO_UEM VALUES(2,'Acadêmico de pós-graduação STRICTU SENSU na UEM', 0.55);
INSERT INTO POSICAO_UEM VALUES(3,'Acadêmico de graduação participante de PET', 0.55);
INSERT INTO POSICAO_UEM VALUES(4,'Acadêmico de graduação participante de iniciação científica', 0.55);
INSERT INTO POSICAO_UEM VALUES(5,'Acadêmico de graduação participante de projeto de pesquisa', 0.55);
INSERT INTO POSICAO_UEM VALUES(6,'Acadêmico de graduação participante de projeto de ensino', 0.55);
INSERT INTO POSICAO_UEM VALUES(7,'Acadêmico de graduação participante de projeto de extensão', 0.55);
INSERT INTO POSICAO_UEM VALUES(8,'Participantes de todos os programas de bolsas oferecidos pela UEM', 0.55);
INSERT INTO POSICAO_UEM VALUES(9,'Acadêmico da UEM não vinculado a projeto ou programa', 0.38);
INSERT INTO POSICAO_UEM VALUES(10,'Servidor da UEM não matriculado em curso de pós-graduação', 0.38);
INSERT INTO POSICAO_UEM VALUES(11,'Filho de servidor da UEM', 0.38);
INSERT INTO POSICAO_UEM VALUES(12,'Servidor da UEM aposentado', 0.38);
INSERT INTO POSICAO_UEM VALUES(13,'Dependente de servidor da UEM aposentado', 0.38);

INSERT INTO CURSO VALUES ('Inglês', 75.00, 520.00, 1);
INSERT INTO CURSO VALUES ('Espanhol', 75.00, 450.00, 2);
INSERT INTO CURSO VALUES ('Italiano', 75.00, 450.00, 3);
INSERT INTO CURSO VALUES ('Francês', 75.00, 480.00, 4);

INSERT INTO INGRESSANTE VALUES('12334849', '312381', 'Cleidyson', 'Arrocha', 'F', '9393283','02141344', 1, 0.00, 0);#retirar situacoes
INSERT INTO INGRESSANTE VALUES('126456', '3564651', 'Joao', 'Alonso', 'M', '42342', '02111543', 6, 0.00, 0);
INSERT INTO INGRESSANTE VALUES('245781', '74589', 'Ana', 'Souza', 'F', '98574218', '06011998', 7, 0.00, 0);
INSERT INTO INGRESSANTE VALUES('534581', '65434', 'Paulo', 'Silva', 'M', '99764218', '53531998', 7, 8.00, 1);
INSERT INTO INGRESSANTE VALUES('876681', '741233', 'Kleber', 'Amaral', 'M', '99884218', '76571998', 7, 7.00, 1);
INSERT INTO INGRESSANTE VALUES('111111', '333333', 'Pascal', 'Lucius', 'M', '99999998', '31111977', 3, 8.00, 1);
INSERT INTO INGRESSANTE VALUES('222221', '444444', 'Joandir', 'Creusa', 'M', '88888848', '2401167', 1, 6.00, 1);
INSERT INTO INGRESSANTE VALUES('333331', '121212', 'Luciana', 'Neta', 'F', '55555558', '15021988', 4, 9.00, 1);
INSERT INTO INGRESSANTE VALUES('444441', '313131', 'Paulo', 'Nicolini', 'M', '44444448', '12041970', 0, 7.00, 1);
INSERT INTO INGRESSANTE VALUES('555555', '414141', 'Ademir', 'Schwarz', 'M', '54542318', '21071956', 0, 9.00, 1);
INSERT INTO INGRESSANTE VALUES('666661', '515151', 'Lilian', 'Filha', 'F', '65432148', '02081934', 5, 8.00, 1);

INSERT INTO TURMA VALUES(11, '13:30' ,'Pedro Celeste','784578124', 1, 20,'Inglês - Terça/Quinta - 13:30');#atualizar com o cpf
INSERT INTO TURMA VALUES(21, '19:40','Pedro Celeste','784578124', 2, 20,'Espanhol - Segunda/Quart - 19:40' );
INSERT INTO TURMA VALUES(31, '15:30','Paulo Cesar','781234524', 3, 30,'Italiano - Quarta/Sexta - 15:30' );
INSERT INTO TURMA VALUES(41, '13:30' ,'Paulo Cesar','781234524', 4, 18,'Francês - Terça/Quinta - 13:30');

INSERT INTO ALUNO VALUES('12334849', '312381', 'Cleidyson', 'Arrocha', 'F', '9393283','02141344' , 1);
INSERT INTO ALUNO VALUES('126456', '3564651', 'Joao', 'Alonso', 'M', '42342', '02111543', 6);
INSERT INTO ALUNO VALUES('245781', '74589', 'Ana', 'Souza', 'F', '98574218', '06011998', 7);

INSERT INTO SALAS VALUES(1, 11, 1, 0.00, 0.00, 0.00, 0.00, 0, 0.00, 0);
INSERT INTO SALAS VALUES(3, 31, 3, 0.00, 0.00, 0.00, 0.00, 0, 0.00, 0);
INSERT INTO SALAS VALUES(1, 11, 4, 0.00, 0.00, 0.00, 0.00, 0, 0.00, 0);
INSERT INTO SALAS VALUES(2, 21, 2, 0.00, 0.00, 0.00, 0.00, 0, 0.00, 0);
INSERT INTO SALAS VALUES(4, 41, 5, 0.00, 0.00, 0.00, 0.00, 0, 0.00, 0);

INSERT INTO INGRESSO VALUES(1, '12334849', 1, 11, 0, 0); #adicionar situcoes
INSERT INTO INGRESSO VALUES(2, '12334849', 2, 21, 0, 0);
INSERT INTO INGRESSO VALUES(4,'126456', 1, 11, 0, 0);
INSERT INTO INGRESSO VALUES(3,'126456', 3, 31, 0, 0);
INSERT INTO INGRESSO VALUES(5, '245781', 4, 41, 1, 0);
INSERT INTO INGRESSO VALUES(6, '111111', 1, 11, 1, 0);
INSERT INTO INGRESSO VALUES(7, '222221', 2, 21, 1, 0);
INSERT INTO INGRESSO VALUES(8, '333331', 2, 21, 1, 0);
INSERT INTO INGRESSO VALUES(9, '444441', 3, 31, 1, 0);
INSERT INTO INGRESSO VALUES(10, '555555', 3, 31, 1, 0);
INSERT INTO INGRESSO VALUES(11, '666661', 4, 41, 1, 0);

INSERT INTO RELACAO VALUES('126456', 3, 3, 31);
INSERT INTO RELACAO VALUES('126456', 4,1, 11);
INSERT INTO RELACAO VALUES('12334849', 1,1, 11);
INSERT INTO RELACAO VALUES('12334849', 2,2, 21);
INSERT INTO RELACAO VALUES('245781', 5,4, 41);

INSERT INTO FUNCIONARIO VALUES('5478621', '24785314', 'Maria', 'de Jesus', 'F', '123', '5478621', 'Maria24785314', '19061979', 1);
INSERT INTO FUNCIONARIO VALUES('784578124', '32478961', 'Pedro', 'Celeste', 'M', '456', '784578124', 'Pedro32478961', '01011982', 2);
INSERT INTO FUNCIONARIO VALUES('781234524', '12348961', 'Paulo', 'Cesar', 'M', '456', '781234524', 'Paulo12348961', '01011982', 2);


INSERT INTO DISPUTA VALUES(1, 1, 11, 1, 0.00);
INSERT INTO DISPUTA VALUES(2, 2, 21, 1, 0.00);
INSERT INTO DISPUTA VALUES(3, 3, 31, 6, 0.00);
INSERT INTO DISPUTA VALUES(4, 1, 11, 6, 0.00);
INSERT INTO DISPUTA VALUES(5, 4, 41, 7, 0.00);

INSERT INTO ENDERECO VALUES('126456', 'Rua Pitangueira', 741, 'apto 202', 8742014);
INSERT INTO ENDERECO VALUES('12334849', 'Rua Sao Jose', 39, 'ao lado do mercado Y', 86325123);
INSERT INTO ENDERECO VALUES('245781', 'Av Raio de Sol', 834, 'apto 1501', 85478514);

SELECT * FROM INGRESSANTE, ENDERECO WHERE ICPF = '12334849' AND ECPF = ICPF;

drop procedure Lista;

DELIMITER //
CREATE PROCEDURE Lista()
BEGIN 
	SELECT INOME, ISOBRENOME, DESCRICAO, MEDIA
    FROM INGRESSANTE, TURMA, INGRESSO
	WHERE MEDIA>=7.0 AND SIT_ENTREGA = 1 AND POS_UEM <> 0 
    AND ICPF = INCPF AND SIT_PAGAMENTO = 1 AND COD_TURMA = INCOD_TURMA
    ORDER BY INCOD_TURMA, MEDIA  DESC;
END//
DELIMITER ;

DELIMITER //
CREATE PROCEDURE ListaFora()
BEGIN 
    SELECT INOME, ISOBRENOME, DESCRICAO, MEDIA
    FROM INGRESSANTE, TURMA, INGRESSO
	WHERE MEDIA>=7.0 AND SIT_ENTREGA = 1 AND POS_UEM = 0 
    AND ICPF = INCPF AND SIT_PAGAMENTO = 1 AND COD_TURMA = INCOD_TURMA
    ORDER BY INCOD_TURMA, MEDIA DESC;
END//
DELIMITER ;

CALL Lista;
CALL ListaFora;