# DROP DATABASE SISTEMA_ILG2;

CREATE DATABASE IF NOT EXISTS SISTEMA_ILG2;
USE SISTEMA_ILG2;

CREATE TABLE IF NOT EXISTS ALUNO(
	ACPF VARCHAR(11),
    ARG VARCHAR(9),
    ANOME VARCHAR(30),
    ASOBRENOME VARCHAR(30),
    ASEXO CHAR,
    ATELEFONE VARCHAR(20),
    ADATA_NASC VARCHAR(8),
    POS_UEM INT,
    PRIMARY KEY(ACPF)
);

CREATE TABLE IF NOT EXISTS HAB_INGR(
	ANO INT,
	HABILITADO BOOLEAN DEFAULT 0,
    PRIMARY KEY (ANO)
);

INSERT INTO HAB_INGR VALUES (2017, 0);

CREATE TABLE IF NOT EXISTS SALAS(
	SCOD_CURSO INT NOT NULL,
    SCOD_TURMA INT NOT NULL,
    SNUM_INSCRICAO INT NOT NULL,
    SCPF VARCHAR(11),
    PROVA1 FLOAT,
    PROVA_AUX1 FLOAT,
    PROVA2 FLOAT,
    PROVA_AUX2 FLOAT,
    APROVADO BOOLEAN DEFAULT 0,
    MEDIA FLOAT,
    FALTAS INT DEFAULT 0, #FALTAS DOS ALUNOS
    PRIMARY KEY(SNUM_INSCRICAO)
);

CREATE TABLE IF NOT EXISTS FUNCIONARIO(
	FCPF VARCHAR(11),
    FRG VARCHAR(9),
    FNOME VARCHAR(30),
    FSOBRENOME VARCHAR(30),
    FSEXO CHAR,
    ID_SISTEMA VARCHAR(20),
    PASS_SISTEMA VARCHAR(20),
    FTELEFONE VARCHAR(20),
    FDATA_NASC VARCHAR(8),
	TIPO_ACESSO INT NOT NULL, #1 = SELECAO, 2=PROFESSOR
    PRIMARY KEY (FCPF)
);

CREATE TABLE IF NOT EXISTS INGRESSANTE(
	ICPF VARCHAR(11),
    IRG VARCHAR(9),
    INOME VARCHAR(30),
    ISOBRENOME VARCHAR(30),
    ISEXO CHAR,
    ITELEFONE VARCHAR(20),
    IDATA_NASC VARCHAR(8),
    POS_UEM INT,
    MEDIA FLOAT DEFAULT 0.00,
    SIT_ENTREGA BOOLEAN DEFAULT 0,
    PRIMARY KEY (ICPF)
);

CREATE TABLE IF NOT EXISTS POSICAO_UEM(
	NUM_FORM INT,
    DESCRICAO VARCHAR(100),
    DESCONTO FLOAT,
    PRIMARY KEY (NUM_FORM)
);

CREATE TABLE IF NOT EXISTS INGRESSO(
	NUM_INSCRICAO INT NOT NULL AUTO_INCREMENT,
    INCPF VARCHAR(11),
    INCOD_CURSO INT NOT NULL,
    INCOD_TURMA INT NOT NULL,
	SIT_PAGAMENTO BOOLEAN DEFAULT 0, #TEM QUE FAZER UM PAGAMENTO PARA CADA TURMA DISPUTADA
	SIT_ACEITACAO BOOLEAN DEFAULT 0, #AQUI, POIS O INGRESSANTE PODE TER MAIS DE UMA ACEITACAO
    PRIMARY KEY (NUM_INSCRICAO)
);

CREATE TABLE IF NOT EXISTS ENDERECO(
	ECPF VARCHAR(11),
    LOGRADOURO VARCHAR(40),
    NUMERO INT NOT NULL,
    COMPLEMENTO VARCHAR(60),
    CEP VARCHAR(8),
    PRIMARY KEY (ECPF)
);--

CREATE TABLE IF NOT EXISTS CURSO(
	NOME_CURSO VARCHAR(20),
    PRECO FLOAT,
    CARGA_HORARIO FLOAT,
    COD_CURSO INT NOT NULL,
	PRIMARY KEY (COD_CURSO)
);

CREATE TABLE IF NOT EXISTS TURMA(
	COD_TURMA INT NOT NULL,
    HORARIO VARCHAR(5),
    PROFESSOR VARCHAR(30),
	CPF_PROFESSOR VARCHAR(11), #PARA ENCONTRAR AS TURMAS QUE O PROF MINISTRA
    TCOD_CURSO INT NOT NULL,
    NUM_VAGAS INT NOT NULL,
	DESCRICAO VARCHAR(100), #PARA INFORMAR OS DIAS DA SEMANA
		DISPONIVEL BOOLEAN DEFAULT 0,
		PRIMARY KEY (COD_TURMA)
);

CREATE TABLE IF NOT EXISTS DISPUTA(
	DNUM_INSCRICAO INT NOT NULL,
    DCOD_CURSO INT NOT NULL,
    DCOD_TURMA INT NOT NULL,
    POSICAO INT,
    MEDIA FLOAT,
    PRIMARY KEY (DNUM_INSCRICAO)
);

CREATE TABLE IF NOT EXISTS LOGIN(
	LOGIN VARCHAR(11),
	SENHA VARCHAR(30),
	TIPO INT,
	ACESSO BOOLEAN DEFAULT 0,
	PRIMARY KEY (LOGIN)
);

#CREATE TABLE IF NOT EXISTS RELACAO(
#	RCPF VARCHAR(11),
#    RID INT NOT NULL,
#    RCOD_CURSO INT NOT NULL,
#    RCOD_TURMA INT NOT NULL,
#    PRIMARY KEY (RID)
#);

#ALTER TABLE ALUNO
#ADD FOREIGN KEY (ACPF) REFERENCES INGRESSANTE(ICPF);

#RELACAO
#ALTER TABLE RELACAO
#ADD FOREIGN KEY (RCPF) REFERENCES ALUNO(ACPF);

#ALTER TABLE RELACAO
#ADD FOREIGN KEY (RCOD_CURSO) REFERENCES CURSO(COD_CURSO);

#ALTER TABLE RELACAO
#ADD FOREIGN KEY (RCOD_TURMA) REFERENCES TURMA(COD_TURMA);

#SALAS
ALTER TABLE SALAS
ADD FOREIGN KEY (SCOD_TURMA) REFERENCES TURMA(COD_TURMA);

ALTER TABLE SALAS
ADD FOREIGN KEY (SCOD_CURSO) REFERENCES CURSO(COD_CURSO);

#INGRESSO
ALTER TABLE INGRESSO
ADD FOREIGN KEY(INCPF) REFERENCES INGRESSANTE(ICPF);

ALTER TABLE INGRESSO
ADD FOREIGN KEY(INCOD_CURSO) REFERENCES CURSO(COD_CURSO);

ALTER TABLE INGRESSO
ADD FOREIGN KEY(INCOD_TURMA) REFERENCES TURMA(COD_TURMA);

ALTER TABLE ENDERECO
ADD FOREIGN KEY(ECPF) REFERENCES INGRESSANTE(ICPF);

ALTER TABLE TURMA
ADD FOREIGN KEY(TCOD_CURSO) REFERENCES CURSO(COD_CURSO);

ALTER TABLE DISPUTA
ADD FOREIGN KEY(DNUM_INSCRICAO) REFERENCES INGRESSO(NUM_INSCRICAO);

ALTER TABLE DISPUTA
ADD FOREIGN KEY(DCOD_CURSO) REFERENCES CURSO(COD_CURSO);

ALTER TABLE DISPUTA
ADD FOREIGN KEY(DCOD_TURMA) REFERENCES TURMA(COD_TURMA);

ALTER TABLE INGRESSANTE
ADD FOREIGN KEY (POS_UEM) REFERENCES POSICAO_UEM (NUM_FORM);

ALTER TABLE ALUNO
ADD FOREIGN KEY (POS_UEM) REFERENCES POSICAO_UEM (NUM_FORM);

ALTER TABLE ENDERECO
ADD FOREIGN KEY (ECPF) REFERENCES ALUNO(ACPF);
